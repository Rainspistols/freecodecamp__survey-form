{"version":3,"sources":["images/homeBg.jpg","components/ui/Input.js","components/layouts/InputAndLabel.js","components/ui/Label.js","components/ui/RadioList.js","components/ui/CheckboxList.js","components/Form.js","components/Hero.js","components/layouts/MainLayout.js","App.js","theme.js","GlobalStyles.js","index.js"],"names":["module","exports","InputStyled","styled","input","Input","props","required","children","InputAndLabelStyled","div","InputAndLabel","label","className","LabelStyled","Label","text","htmlFor","smallText","RadioListStyled","RadioList","data","name","onChange","value","map","item","index","key","type","defaultChecked","id","CheckboxListStyled","CheckboxList","checkedData","checked","selectData","selectData2","checkboxData","radioData","FormStyled","form","Form","useState","email","age","textarea","dropdown","radio","dropdown2","checkbox","Challenges","Videos","Wiki","Forum","formData","setFormData","formRef","useRef","onSubmit","e","preventDefault","current","checkValidity","alert","target","ref","placeholder","min","max","as","disabled","rows","style","borderRadius","onClick","HeroStyled","section","Hero","MainLayoutStyled","theme","mediaTablet","MainLayout","App","mediaDesktop","Theme","GlobalStyles","styles","css","emotionNormalize","homeBg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c67a1312.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homeBg.a48f1005.jpg\";","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Input = (props) => {\n  const { required = true, children } = props;\n\n  return (\n    <InputStyled {...props} required={required}>\n      {children}\n    </InputStyled>\n  );\n};\n\nconst InputStyled = styled.input`\n  min-height: 40px;\n\n  font-size: 20px;\n  background-color: white;\n  border-radius: 5px;\n  width: 100%;\n  padding: 1% 3%;\n  box-sizing: border-box;\n  color: #303a52;\n\n  &::placeholder {\n    color: black;\n    font-size: 18px;\n    font-weight: 400;\n  }\n\n  &:focus {\n    border-color: #3d5af1;\n    outline: 0;\n    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);\n  }\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst InputAndLabel = ({ label, input }) => {\n  return (\n    <InputAndLabelStyled>\n      <div className='label-wrap'>{label}</div>\n      <div className='input-wrap'>{input}</div>\n    </InputAndLabelStyled>\n  );\n};\n\nconst InputAndLabelStyled = styled.div`\n  margin-bottom: 30px;\n  .label-wrap {\n    margin-bottom: 10px;\n  }\n`;\n\nexport default InputAndLabel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = ({ text, htmlFor, smallText }) => {\n  return (\n    <LabelStyled htmlFor={htmlFor}>\n      {text} {smallText && <span>{smallText}</span>}\n    </LabelStyled>\n  );\n};\n\nconst LabelStyled = styled.label`\n  color: white;\n  font-weight: 600;\n  font-size: 18px;\n  span {\n    font-weight: 400;\n    font-size: 16px;\n  }\n`;\n\nexport default Label;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Label from './Label';\nimport Input from './Input';\n\nconst RadioList = ({ data, name, onChange, value }) => {\n  return (\n    <RadioListStyled>\n      {data.map((item, index) => (\n        <div key={index} className='radio-item__wrap'>\n          <Input\n            name={name}\n            value={item}\n            type='radio'\n            onChange={onChange}\n            defaultChecked={index === 0 ? true : false}\n            id={item}\n          />\n          <Label text={item} htmlFor={item} />\n        </div>\n      ))}\n    </RadioListStyled>\n  );\n};\n\nconst RadioListStyled = styled.div`\n  .radio-item__wrap {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  input {\n    width: auto;\n    margin-right: 10px;\n    display: block;\n    width: 30px;\n  }\n`;\n\nexport default RadioList;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Label from './Label';\nimport Input from './Input';\n\nconst CheckboxList = ({ checkedData, data, onChange }) => {\n  return (\n    <CheckboxListStyled>\n      {data.map((item, index) => (\n        <div className='checkbox-item__wrap' key={index}>\n          <Input\n            type='checkbox'\n            required={false}\n            id={item}\n            onChange={onChange}\n            checked={checkedData[item]}\n            value={item}\n          />\n          <Label text={item} htmlFor={item} />\n        </div>\n      ))}\n    </CheckboxListStyled>\n  );\n};\n\nconst CheckboxListStyled = styled.div`\n  .checkbox-item__wrap {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  input {\n    width: auto;\n    margin-right: 10px;\n    display: block;\n    width: 30px;\n  }\n`;\n\nexport default CheckboxList;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { useState, useRef } from 'react';\n\nimport Input from './ui/Input';\nimport InputAndLabel from './layouts/InputAndLabel';\nimport Label from './ui/Label';\nimport RadioList from './ui/RadioList';\nimport CheckboxList from './ui/CheckboxList';\n\nconst selectData = [\n  'Select a current role',\n  'Student',\n  'Full Time Job',\n  'Full Time Learner',\n  'Prefer not to say',\n  'Other',\n];\n\nconst selectData2 = [\n  'Select an option',\n  'Challanges',\n  'Projects',\n  'Community',\n  'Open Source',\n];\n\nconst checkboxData = [\n  'Front-end Projects',\n  'Back-end Projects',\n  'Data Visualization',\n  'Challenges',\n  'Open Source Community',\n  'Gitter help rooms',\n  'Videos',\n  'City Meetups',\n  'Wiki',\n  'Forum',\n  'Additional Courses',\n];\n\nconst radioData = ['Definitely', 'Maybe', 'Not sure'];\n\nconst Form = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    age: '',\n    textarea: '',\n    dropdown: 'Select a current role',\n    radio: 'Definitely',\n    dropdown2: 'Select an option',\n    checkbox: {\n      'Front-end Projects': false,\n      'Back-end Projects': false,\n      'Data Visualization': false,\n      Challenges: false,\n      'Open Source Community': false,\n      'Gitter help rooms': false,\n      Videos: false,\n      'City Meetups': false,\n      Wiki: false,\n      Forum: false,\n      'Additional Courses': false,\n    },\n  });\n\n  const formRef = useRef(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (formRef.current.checkValidity()) {\n      alert('The form is completed correctly. Thanks you!');\n    }\n  };\n\n  const onChange = (e) => {\n    const { id, value, type, name } = e.target;\n\n    switch (type) {\n      // RADIO\n      case 'radio':\n        setFormData({\n          ...formData,\n          [name]: value,\n        });\n        break;\n      // CHECKBOX\n      case 'checkbox':\n        {\n          const { checked } = e.target;\n\n          setFormData((formData) => ({\n            ...formData,\n            checkbox: {\n              ...formData.checkbox,\n              [id]: checked ? true : false,\n            },\n          }));\n        }\n        break;\n      // TEXT,NUMBER,EMAIL\n      default:\n        setFormData({\n          ...formData,\n          [id]: value,\n        });\n    }\n  };\n\n  return (\n    <FormStyled id='survey-form' onSubmit={onSubmit} ref={formRef}>\n      {/* NAME */}\n      <InputAndLabel\n        label={<Label htmlFor='name' text='Name' />}\n        input={\n          <Input\n            placeholder='Enter your name'\n            type='text'\n            id='name'\n            onChange={onChange}\n            value={formData.name}\n          />\n        }\n      />\n      {/* EMAIL */}\n      <InputAndLabel\n        label={<Label htmlFor='email' text='Email' />}\n        input={\n          <Input\n            placeholder='Enter your email'\n            type='email'\n            id='email'\n            onChange={onChange}\n            value={formData.email}\n          />\n        }\n      />\n      {/* AGE */}\n      <InputAndLabel\n        label={<Label htmlFor='age' text='Age' smallText='(optional)' />}\n        input={\n          <Input\n            placeholder='Age'\n            type='number'\n            id='age'\n            onChange={onChange}\n            value={formData.age}\n            required={false}\n            min='18'\n            max='120'\n          />\n        }\n      />\n      {/* DROPDOWN */}\n      <InputAndLabel\n        label={\n          <Label\n            htmlFor='dropdown'\n            text='Which option best describes your current role?'\n          />\n        }\n        input={\n          <Input\n            id='dropdown'\n            as='select'\n            onChange={onChange}\n            value={formData.dropdown}\n            name='dropdown'\n          >\n            {selectData.map((item, index) => (\n              <option\n                key={index}\n                value={item}\n                disabled={index === 0 ? true : false}\n              >\n                {item}\n              </option>\n            ))}\n          </Input>\n        }\n      />\n      {/* RADIO */}\n      <InputAndLabel\n        label={\n          <Label\n            htmlFor='radio'\n            text='Would you recommend freeCodeCamp to a friend?'\n          />\n        }\n        input={<RadioList data={radioData} onChange={onChange} name='radio' />}\n      />\n      {/* DROPDOWN2 */}\n      <InputAndLabel\n        label={\n          <Label\n            htmlFor='dropdown2'\n            text='What is your favorite feature of freeCodeCamp?'\n          />\n        }\n        input={\n          <Input\n            id='dropdown2'\n            as='select'\n            onChange={onChange}\n            value={formData.dropdown2}\n            name='dropdown2'\n          >\n            {selectData2.map((item, index) => (\n              <option\n                key={index}\n                value={item}\n                disabled={index === 0 ? true : false}\n              >\n                {item}\n              </option>\n            ))}\n          </Input>\n        }\n      />\n      {/* CHECKBOX */}\n      <InputAndLabel\n        label={\n          <Label\n            text='What would you like to see improved?'\n            smallText='(Check all that apply)'\n          />\n        }\n        input={\n          <CheckboxList\n            checkedData={formData.checkbox}\n            data={checkboxData}\n            onChange={onChange}\n          />\n        }\n      />\n      {/* TEXTAREA */}\n      <InputAndLabel\n        label={<Label htmlFor='textarea' text='Any comments or suggestions?' />}\n        input={\n          <Input\n            placeholder='Enter your comment here ...'\n            as='textarea'\n            id='textarea'\n            onChange={onChange}\n            value={formData.textarea}\n            rows='4'\n            style={{ borderRadius: 0 }}\n          />\n        }\n      />\n\n      <button id='submit' onClick={onSubmit} type='submit'>\n        Submit\n      </button>\n    </FormStyled>\n  );\n};\n\nconst FormStyled = styled.form`\n  padding: 5% 10% 5% 10%;\n  background: rgba(27, 27, 50, 0.8);\n  border-radius: 5px;\n\n  button {\n    height: 40px;\n    width: 100%;\n    background: #17b978;\n    border: none;\n    font-size: 18px;\n    color: white;\n    font-weight: 500;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n`;\n\nexport default Form;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Hero = () => {\n  return (\n    <HeroStyled>\n      <h1 id='title'>freeCodeCamp Survey Form</h1>\n      <p id='description'>Thank you for taking the time to check my form</p>\n    </HeroStyled>\n  );\n};\n\nconst HeroStyled = styled.section`\n  padding: 40px 5% 20px 5%;\n  text-align: center;\n\n  #title {\n    font-weight: 700;\n    font-size: 30px;\n    line-height: 30px;\n    margin-bottom: 10px;\n  }\n\n  #description {\n    font-style: italic;\n    font-weight: 300;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);\n    font-size: 20px;\n    line-height: 20px;\n  }\n`;\n\nexport default Hero;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst MainLayout = ({ children }) => {\n  return <MainLayoutStyled>{children}</MainLayoutStyled>;\n};\n\nconst MainLayoutStyled = styled.div`\n  ${({ theme }) => theme.mediaTablet} {\n    width: 80%;\n    margin: 0 auto;\n  }\n`;\n\nexport default MainLayout;\n","import React from 'react';\n// Components\nimport Form from './components/Form';\nimport Hero from './components/Hero';\nimport MainLayout from './components/layouts/MainLayout';\n\nconst App = () => {\n  return (\n    <div>\n      <MainLayout>\n        <Hero />\n        <Form />\n      </MainLayout>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { ThemeProvider } from 'emotion-theming';\n\nconst theme = {\n  mediaTablet: '@media(min-width: 768px)',\n  mediaDesktop: '@media(min-width: 1280px)',\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default Theme;\n","import { Global, css } from '@emotion/core';\nimport emotionNormalize from 'emotion-normalize';\nimport React from 'react';\n\nimport homeBg from './images/homeBg.jpg';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      ${emotionNormalize}\n      html,\n      body {\n        padding: 0;\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n          'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n          'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        color: white;\n      }\n\n      body::before {\n        content: '';\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        z-index: -1;\n        position: fixed;\n        background: linear-gradient(\n            115deg,\n            rgba(58, 58, 158, 0.7),\n            rgba(136, 136, 206, 0.6)\n          ),\n          url(${homeBg});\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n      }\n\n      code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n          monospace;\n      }\n\n      img {\n        max-width: 100%;\n      }\n      footer,\n      header,\n      body {\n        font-size: 14px;\n        line-height: 1.4em;\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        margin: 0;\n        padding: 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: inherit;\n        margin: 0;\n      }\n\n      ul,\n      li,\n      ol {\n        margin: 0;\n        padding: 0;\n        list-style-type: none;\n      }\n\n      dl,\n      dd {\n        margin-bottom: 0;\n      }\n\n      figure {\n        margin: 0;\n      }\n\n      button {\n        padding: 0;\n      }\n\n      img {\n        max-width: 100%;\n        height: auto;\n        display: block;\n      }\n\n      p {\n        margin: 0;\n      }\n\n      .visually-hidden {\n        position: absolute;\n        clip: rect(0 0 0 0);\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n      }\n\n      .inactive {\n        pointer-events: none;\n      }\n    `}\n  />\n);\nexport default GlobalStyles;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Theme from './theme';\nimport GlobalStyles from './GlobalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <GlobalStyles />\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}